/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Simulation;

import Sort.SortAlgorithm;
import Sort.SelectionSort;
import Sort.InsertionSort;
import Sort.HeapSort;
import Sort.QuickSort;
import Sort.MergeSort;
import Sort.BubbleSort;
import Point.Point;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Tien Dat
 */
public class Simulation extends javax.swing.JFrame {

    /**
     * Creates new form MoPhongSort
     */
    private ArrayList<JTextField> tf;//tf ct;
    private ArrayList<JLabel> lb; //jlabel mp
    private ArrayList<JButton> control; //button ct
    private SortAlgorithm sort; //chay thuat toan
    private int n;
    private int speed; //toc do sleep
    private int delay;//khoang cach di chuyen
    private Color colorColumn = new Color(255, 242, 225);
    private Color colorNotice = new Color(234, 216, 192);
    private Color colorNameOfSort = new Color(209, 187, 158);
    private Color colorTittle = new Color(167, 146, 119);
    private String fileName;
    private float rateSize;

    public Simulation() {
        initComponents();
        tf = new ArrayList<>();
        lb = new ArrayList<>();
        control = new ArrayList<>();
        speed = 3 * 2;
        delay = 2;
        sort = new SortAlgorithm();
        upSort.setSelected(true);
        single.setSelected(true);
        fileName = new String();
        rateSize = (float) 1.0;
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent evt) { //pannel thay doi
                eventResized(evt);
            }
        });
    }

    private void eventResized(ComponentEvent evt) {
        rateSize = (float) (1.0 * ct.getWidth() / 1375);
        sort.setSpeed(0);
        while (sort.isAlive()) {
        }
        ct.removeAll();
        mp.removeAll();
        initButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dieuKhien = new javax.swing.ButtonGroup();
        loaiMP = new javax.swing.ButtonGroup();
        thuatToan = new javax.swing.ButtonGroup();
        menu = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        ptaomang = new javax.swing.JPanel();
        ptittlecreate = new javax.swing.JPanel();
        pgreenMP = new javax.swing.JPanel();
        ltaomang = new javax.swing.JLabel();
        descriptTaoMang = new javax.swing.JPanel();
        pspt = new javax.swing.JPanel();
        lspt = new javax.swing.JLabel();
        contentTaomang = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        spt = new javax.swing.JSpinner();
        taomang = new javax.swing.JButton();
        preaddata = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        ltaomang3 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        bubble = new javax.swing.JRadioButton();
        select = new javax.swing.JRadioButton();
        insert = new javax.swing.JRadioButton();
        quick = new javax.swing.JRadioButton();
        heap = new javax.swing.JRadioButton();
        merge = new javax.swing.JRadioButton();
        jPanel11 = new javax.swing.JPanel();
        p1 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        ltaomang1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        upSort = new javax.swing.JRadioButton();
        jPanel15 = new javax.swing.JPanel();
        downSort = new javax.swing.JRadioButton();
        p3 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        ltaomang2 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        upSort2 = new javax.swing.JRadioButton();
        jPanel18 = new javax.swing.JPanel();
        single = new javax.swing.JRadioButton();
        jPanel19 = new javax.swing.JPanel();
        compare = new javax.swing.JRadioButton();
        p2 = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        bhelp = new javax.swing.JPanel();
        help = new javax.swing.JButton();
        pspeed = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        labelSpeed = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        sliderSpeed = new javax.swing.JSlider();
        ptittle = new javax.swing.JPanel();
        mainTittle = new javax.swing.JLabel();
        simulation = new javax.swing.JPanel();
        timeOfSwapHeader = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        Labelnos = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        number = new javax.swing.JLabel();
        mainProgram = new javax.swing.JPanel();
        ct = new javax.swing.JPanel();
        mp = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menu.setBackground(new java.awt.Color(51, 51, 51));
        menu.setPreferredSize(new java.awt.Dimension(300, 880));
        menu.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 876, Short.MAX_VALUE)
        );

        menu.add(jPanel6, java.awt.BorderLayout.LINE_START);

        jPanel8.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 876, Short.MAX_VALUE)
        );

        menu.add(jPanel8, java.awt.BorderLayout.LINE_END);

        jPanel9.setBackground(new java.awt.Color(51, 51, 51));
        jPanel9.setLayout(new java.awt.BorderLayout());

        ptaomang.setPreferredSize(new java.awt.Dimension(250, 190));
        ptaomang.setLayout(new java.awt.BorderLayout());

        ptittlecreate.setBackground(new java.awt.Color(51, 51, 51));
        ptittlecreate.setPreferredSize(new java.awt.Dimension(250, 50));
        ptittlecreate.setLayout(new java.awt.BorderLayout());

        pgreenMP.setBackground(new java.awt.Color(100, 204, 197));
        pgreenMP.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ltaomang.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        ltaomang.setForeground(new java.awt.Color(51, 51, 0));
        ltaomang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ltaomang.setText("Tạo mảng");
        ltaomang.setToolTipText("");
        ltaomang.setMaximumSize(new java.awt.Dimension(500, 250));
        ltaomang.setMinimumSize(new java.awt.Dimension(25, 5));

        javax.swing.GroupLayout pgreenMPLayout = new javax.swing.GroupLayout(pgreenMP);
        pgreenMP.setLayout(pgreenMPLayout);
        pgreenMPLayout.setHorizontalGroup(
            pgreenMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
            .addGroup(pgreenMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ltaomang, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))
        );
        pgreenMPLayout.setVerticalGroup(
            pgreenMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
            .addGroup(pgreenMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ltaomang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
        );

        ptittlecreate.add(pgreenMP, java.awt.BorderLayout.CENTER);

        ptaomang.add(ptittlecreate, java.awt.BorderLayout.PAGE_START);

        descriptTaoMang.setLayout(new java.awt.BorderLayout());

        pspt.setBackground(new java.awt.Color(51, 51, 51));
        pspt.setPreferredSize(new java.awt.Dimension(250, 40));
        pspt.setLayout(new java.awt.BorderLayout());

        lspt.setBackground(new java.awt.Color(255, 255, 255));
        lspt.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lspt.setForeground(new java.awt.Color(204, 204, 204));
        lspt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lspt.setText("Số phần tử (tối đa 15):");
        pspt.add(lspt, java.awt.BorderLayout.LINE_START);

        descriptTaoMang.add(pspt, java.awt.BorderLayout.PAGE_START);

        contentTaomang.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setPreferredSize(new java.awt.Dimension(250, 45));

        spt.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        spt.setModel(new javax.swing.SpinnerNumberModel(2, 2, 15, 1));

        taomang.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        taomang.setForeground(new java.awt.Color(0, 153, 102));
        taomang.setText("Tạo mảng");
        taomang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taomangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spt, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(taomang))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(taomang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        contentTaomang.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        preaddata.setBackground(new java.awt.Color(51, 51, 51));
        preaddata.setPreferredSize(new java.awt.Dimension(250, 100));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Đọc dữ liệu file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout preaddataLayout = new javax.swing.GroupLayout(preaddata);
        preaddata.setLayout(preaddataLayout);
        preaddataLayout.setHorizontalGroup(
            preaddataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preaddataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
        );
        preaddataLayout.setVerticalGroup(
            preaddataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preaddataLayout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        contentTaomang.add(preaddata, java.awt.BorderLayout.CENTER);

        descriptTaoMang.add(contentTaomang, java.awt.BorderLayout.CENTER);

        ptaomang.add(descriptTaoMang, java.awt.BorderLayout.CENTER);

        jPanel9.add(ptaomang, java.awt.BorderLayout.PAGE_START);

        jPanel10.setBackground(new java.awt.Color(51, 51, 51));
        jPanel10.setPreferredSize(new java.awt.Dimension(210, 380));
        jPanel10.setLayout(new java.awt.BorderLayout());

        jPanel22.setBackground(new java.awt.Color(100, 204, 197));
        jPanel22.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel22.setPreferredSize(new java.awt.Dimension(250, 50));

        ltaomang3.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        ltaomang3.setForeground(new java.awt.Color(51, 51, 0));
        ltaomang3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ltaomang3.setText("Thuật toán");
        ltaomang3.setToolTipText("");
        ltaomang3.setMaximumSize(new java.awt.Dimension(500, 250));
        ltaomang3.setMinimumSize(new java.awt.Dimension(25, 5));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ltaomang3, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ltaomang3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
        );

        jPanel10.add(jPanel22, java.awt.BorderLayout.PAGE_START);

        jPanel23.setBackground(new java.awt.Color(51, 51, 51));

        thuatToan.add(bubble);
        bubble.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        bubble.setForeground(new java.awt.Color(0, 153, 102));
        bubble.setText("Bubble Sort");
        bubble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubbleActionPerformed(evt);
            }
        });

        thuatToan.add(select);
        select.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        select.setForeground(new java.awt.Color(0, 153, 102));
        select.setText("Selection Sort");

        thuatToan.add(insert);
        insert.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        insert.setForeground(new java.awt.Color(0, 153, 102));
        insert.setText("Insertion Sort");

        thuatToan.add(quick);
        quick.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        quick.setForeground(new java.awt.Color(0, 153, 102));
        quick.setText("Quick Sort");

        thuatToan.add(heap);
        heap.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        heap.setForeground(new java.awt.Color(0, 153, 102));
        heap.setText("Heap Sort");

        thuatToan.add(merge);
        merge.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        merge.setForeground(new java.awt.Color(0, 153, 102));
        merge.setText("Merge Sort");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bubble)
                    .addComponent(select)
                    .addComponent(insert)
                    .addComponent(quick)
                    .addComponent(heap)
                    .addComponent(merge))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(bubble)
                .addGap(21, 21, 21)
                .addComponent(select)
                .addGap(21, 21, 21)
                .addComponent(insert)
                .addGap(21, 21, 21)
                .addComponent(quick)
                .addGap(21, 21, 21)
                .addComponent(heap)
                .addGap(21, 21, 21)
                .addComponent(merge)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel10.add(jPanel23, java.awt.BorderLayout.CENTER);

        jPanel9.add(jPanel10, java.awt.BorderLayout.PAGE_END);

        jPanel11.setBackground(new java.awt.Color(51, 51, 51));
        jPanel11.setPreferredSize(new java.awt.Dimension(210, 800));
        jPanel11.setLayout(null);

        p1.setBackground(new java.awt.Color(51, 51, 51));
        p1.setPreferredSize(new java.awt.Dimension(210, 150));
        p1.setLayout(new java.awt.BorderLayout());

        jPanel14.setBackground(new java.awt.Color(100, 204, 197));
        jPanel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.setPreferredSize(new java.awt.Dimension(250, 50));
        jPanel14.setLayout(new java.awt.BorderLayout());

        ltaomang1.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        ltaomang1.setForeground(new java.awt.Color(51, 51, 0));
        ltaomang1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ltaomang1.setText("Điều khiển");
        ltaomang1.setToolTipText("");
        ltaomang1.setMaximumSize(new java.awt.Dimension(500, 250));
        ltaomang1.setMinimumSize(new java.awt.Dimension(25, 5));
        jPanel14.add(ltaomang1, java.awt.BorderLayout.CENTER);

        p1.add(jPanel14, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));
        jPanel7.setPreferredSize(new java.awt.Dimension(250, 50));
        jPanel7.setLayout(new java.awt.BorderLayout());

        dieuKhien.add(upSort);
        upSort.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        upSort.setForeground(new java.awt.Color(204, 204, 204));
        upSort.setSelected(true);
        upSort.setText("Sắp xếp tăng dần");
        upSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upSortActionPerformed(evt);
            }
        });
        jPanel7.add(upSort, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jPanel15.setBackground(new java.awt.Color(51, 51, 51));
        jPanel15.setPreferredSize(new java.awt.Dimension(250, 50));
        jPanel15.setLayout(new java.awt.BorderLayout());

        dieuKhien.add(downSort);
        downSort.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        downSort.setForeground(new java.awt.Color(204, 204, 204));
        downSort.setText("Sắp xếp giảm dần");
        downSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downSortActionPerformed(evt);
            }
        });
        jPanel15.add(downSort, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel15, java.awt.BorderLayout.CENTER);

        p1.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel11.add(p1);
        p1.setBounds(0, 0, 220, 150);

        p3.setLayout(new java.awt.BorderLayout());

        jPanel17.setBackground(new java.awt.Color(100, 204, 197));
        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel17.setPreferredSize(new java.awt.Dimension(250, 50));
        jPanel17.setLayout(new java.awt.BorderLayout());

        ltaomang2.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        ltaomang2.setForeground(new java.awt.Color(51, 51, 0));
        ltaomang2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ltaomang2.setText("Mô phỏng");
        ltaomang2.setToolTipText("");
        ltaomang2.setMaximumSize(new java.awt.Dimension(500, 250));
        ltaomang2.setMinimumSize(new java.awt.Dimension(25, 5));
        jPanel17.add(ltaomang2, java.awt.BorderLayout.CENTER);

        p3.add(jPanel17, java.awt.BorderLayout.PAGE_START);

        jPanel12.setBackground(new java.awt.Color(51, 51, 51));
        jPanel12.setLayout(new java.awt.BorderLayout());

        jPanel13.setBackground(new java.awt.Color(51, 51, 51));
        jPanel13.setPreferredSize(new java.awt.Dimension(250, 40));
        jPanel13.setLayout(new java.awt.BorderLayout());

        upSort2.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        upSort2.setForeground(new java.awt.Color(204, 204, 204));
        upSort2.setText("Sắp xếp tăng dần");
        jPanel13.add(upSort2, java.awt.BorderLayout.CENTER);

        jPanel12.add(jPanel13, java.awt.BorderLayout.PAGE_START);

        jPanel18.setBackground(new java.awt.Color(51, 51, 51));
        jPanel18.setPreferredSize(new java.awt.Dimension(250, 50));
        jPanel18.setLayout(new java.awt.BorderLayout());

        loaiMP.add(single);
        single.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        single.setForeground(new java.awt.Color(204, 204, 204));
        single.setText("Chạy đơn thuật toán");
        single.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleActionPerformed(evt);
            }
        });
        jPanel18.add(single, java.awt.BorderLayout.CENTER);

        jPanel12.add(jPanel18, java.awt.BorderLayout.PAGE_START);

        jPanel19.setBackground(new java.awt.Color(51, 51, 51));
        jPanel19.setPreferredSize(new java.awt.Dimension(250, 50));
        jPanel19.setLayout(new java.awt.BorderLayout());

        loaiMP.add(compare);
        compare.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        compare.setForeground(new java.awt.Color(204, 204, 204));
        compare.setText("So sánh thuật toán");
        compare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareActionPerformed(evt);
            }
        });
        jPanel19.add(compare, java.awt.BorderLayout.CENTER);

        jPanel12.add(jPanel19, java.awt.BorderLayout.CENTER);

        p3.add(jPanel12, java.awt.BorderLayout.CENTER);

        jPanel11.add(p3);
        p3.setBounds(0, 156, 220, 150);

        p2.setBackground(new java.awt.Color(51, 51, 51));
        p2.setPreferredSize(new java.awt.Dimension(220, 20));
        p2.setLayout(new java.awt.BorderLayout());
        jPanel11.add(p2);
        p2.setBounds(0, 150, 220, 6);

        jPanel9.add(jPanel11, java.awt.BorderLayout.CENTER);

        menu.add(jPanel9, java.awt.BorderLayout.CENTER);

        getContentPane().add(menu, java.awt.BorderLayout.LINE_START);

        header.setBackground(new java.awt.Color(51, 51, 51));
        header.setPreferredSize(new java.awt.Dimension(1375, 80));
        header.setRequestFocusEnabled(false);
        header.setLayout(new java.awt.BorderLayout());

        bhelp.setBackground(new java.awt.Color(51, 51, 51));

        help.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        help.setText("Help ?");
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bhelpLayout = new javax.swing.GroupLayout(bhelp);
        bhelp.setLayout(bhelpLayout);
        bhelpLayout.setHorizontalGroup(
            bhelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bhelpLayout.createSequentialGroup()
                .addComponent(help, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        bhelpLayout.setVerticalGroup(
            bhelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bhelpLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(help, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        header.add(bhelp, java.awt.BorderLayout.LINE_END);

        pspeed.setBackground(new java.awt.Color(51, 51, 51));
        pspeed.setPreferredSize(new java.awt.Dimension(250, 80));
        pspeed.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));

        labelSpeed.setBackground(new java.awt.Color(0, 153, 153));
        labelSpeed.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        labelSpeed.setForeground(new java.awt.Color(204, 204, 204));
        labelSpeed.setText("Tốc độ:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(labelSpeed)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(labelSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pspeed.add(jPanel4, java.awt.BorderLayout.LINE_START);

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));

        sliderSpeed.setBackground(new java.awt.Color(255, 255, 255));
        sliderSpeed.setForeground(new java.awt.Color(204, 204, 204));
        sliderSpeed.setMajorTickSpacing(1);
        sliderSpeed.setMaximum(5);
        sliderSpeed.setMinimum(1);
        sliderSpeed.setPaintLabels(true);
        sliderSpeed.setValue(3);
        sliderSpeed.setAutoscrolls(true);
        sliderSpeed.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderSpeedStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sliderSpeed, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(sliderSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pspeed.add(jPanel5, java.awt.BorderLayout.CENTER);

        header.add(pspeed, java.awt.BorderLayout.LINE_START);

        ptittle.setBackground(new java.awt.Color(51, 51, 51));

        mainTittle.setBackground(new java.awt.Color(51, 51, 51));
        mainTittle.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        mainTittle.setForeground(new java.awt.Color(209, 255, 249));
        mainTittle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainTittle.setText("Simulating Sorting Algorithms");

        javax.swing.GroupLayout ptittleLayout = new javax.swing.GroupLayout(ptittle);
        ptittle.setLayout(ptittleLayout);
        ptittleLayout.setHorizontalGroup(
            ptittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ptittleLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(mainTittle, javax.swing.GroupLayout.DEFAULT_SIZE, 1031, Short.MAX_VALUE))
        );
        ptittleLayout.setVerticalGroup(
            ptittleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ptittleLayout.createSequentialGroup()
                .addComponent(mainTittle, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        header.add(ptittle, java.awt.BorderLayout.CENTER);

        getContentPane().add(header, java.awt.BorderLayout.PAGE_START);

        simulation.setBackground(new java.awt.Color(204, 204, 204));
        simulation.setPreferredSize(new java.awt.Dimension(1375, 600));
        simulation.setLayout(new java.awt.BorderLayout());

        timeOfSwapHeader.setBackground(new java.awt.Color(0, 0, 0));
        timeOfSwapHeader.setPreferredSize(new java.awt.Dimension(1175, 40));
        timeOfSwapHeader.setLayout(new java.awt.BorderLayout());

        jPanel24.setBackground(new java.awt.Color(0, 0, 0));
        jPanel24.setPreferredSize(new java.awt.Dimension(240, 40));
        jPanel24.setLayout(new java.awt.BorderLayout());

        Labelnos.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        Labelnos.setForeground(new java.awt.Color(255, 255, 255));
        Labelnos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Labelnos.setText("Number Of Swaps: ");
        Labelnos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Labelnos.setPreferredSize(new java.awt.Dimension(100, 34));
        Labelnos.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel24.add(Labelnos, java.awt.BorderLayout.CENTER);

        timeOfSwapHeader.add(jPanel24, java.awt.BorderLayout.LINE_START);

        jPanel25.setBackground(new java.awt.Color(0, 0, 0));
        jPanel25.setPreferredSize(new java.awt.Dimension(880, 40));

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 880, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        timeOfSwapHeader.add(jPanel25, java.awt.BorderLayout.LINE_END);

        jPanel26.setBackground(new java.awt.Color(0, 0, 0));
        jPanel26.setPreferredSize(new java.awt.Dimension(20, 40));
        jPanel26.setLayout(new java.awt.BorderLayout());

        number.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        number.setForeground(new java.awt.Color(255, 255, 255));
        number.setText("0");
        jPanel26.add(number, java.awt.BorderLayout.CENTER);

        timeOfSwapHeader.add(jPanel26, java.awt.BorderLayout.CENTER);

        simulation.add(timeOfSwapHeader, java.awt.BorderLayout.PAGE_START);

        mainProgram.setLayout(new java.awt.BorderLayout());

        ct.setBackground(new java.awt.Color(102, 102, 102));
        ct.setPreferredSize(new java.awt.Dimension(1150, 50));

        javax.swing.GroupLayout ctLayout = new javax.swing.GroupLayout(ct);
        ct.setLayout(ctLayout);
        ctLayout.setHorizontalGroup(
            ctLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1163, Short.MAX_VALUE)
        );
        ctLayout.setVerticalGroup(
            ctLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        mainProgram.add(ct, java.awt.BorderLayout.CENTER);

        mp.setBackground(new java.awt.Color(0, 0, 0));
        mp.setPreferredSize(new java.awt.Dimension(1150, 710));

        javax.swing.GroupLayout mpLayout = new javax.swing.GroupLayout(mp);
        mp.setLayout(mpLayout);
        mpLayout.setHorizontalGroup(
            mpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1163, Short.MAX_VALUE)
        );
        mpLayout.setVerticalGroup(
            mpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
        );

        mainProgram.add(mp, java.awt.BorderLayout.PAGE_START);

        simulation.add(mainProgram, java.awt.BorderLayout.CENTER);

        getContentPane().add(simulation, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        Assets.Picture a = new Assets.Picture();
        a.setTitle("Hướng dẫn sử dụng");
        a.setVisible(true);
    }//GEN-LAST:event_helpActionPerformed

    private void sliderSpeedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderSpeedStateChanged
        int initSpeed = 5 - sliderSpeed.getValue() + 1;
        if (initSpeed != 1) {
            initSpeed = (initSpeed - 1) * 2;
        }
        speed = initSpeed;
        if (sort.isAlive())
            sort.setSpeed(initSpeed);
    }//GEN-LAST:event_sliderSpeedStateChanged

    private void taomangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taomangActionPerformed
        if (sort.isAlive()) {
            JOptionPane.showMessageDialog(null, "Bạn không thể tạo mảng mới trong quá trình mô phỏng!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Object value = spt.getValue();
        if (!(value instanceof Integer)) {
            return;
        }
        n = (int) value;
        tf.clear();
        ct.removeAll();
        JLabel l = new JLabel("Nhập dữ liệu:");// tao jlabel, set dinh dang, them vao panel
        fontct(l);
        int x = (int) (14 * rateSize);
        l.setBounds((int) (x * rateSize), (int) (1 * rateSize), (int) (160 * rateSize), (int) (50 * rateSize));
        ct.add(l);
        int y = (int) ((l.getHeight() + 10) * rateSize);
        int w = (int) (56 * rateSize);
        int h = (int) (56 * rateSize);
        for (int i = 0; i < n; i++) { //tao texfield, set dinh dang, them vao panel
            JTextField jtf = new JTextField("");
            fontct(jtf);
            jtf.setBounds(x, y, w, h);
            x += (int) (64 * rateSize); //moi o cach nhau 50 cm
            tf.add(jtf);
            ct.add(jtf);
        }

        x += 5 + rateSize;

        JButton bstart = new JButton("Tạo mảng"); //button bat dau
        bstart.setBackground(new Color(0, 150, 102));
        Font f = new Font("Arial", Font.BOLD,(int)(15*rateSize));
        bstart.setFont(f);
        bstart.setBounds(x, y, (int) (100 * rateSize), h);
        ct.add(bstart);bstart.setBounds(x, y, (int) (100 * rateSize), h);
        bstart.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (WrongData()) {
                    return;
                }
                CreateLabelList();
                buttonCT();
            }
        });

        JButton brandom = new JButton("Giá trị ngẫu nhiên"); //buton cho giatri ngau nhien
        fontct(brandom);
        x += (int) ((bstart.getWidth() + 10) + rateSize);
        brandom.setBounds(x, y, w + 100, h);
        ct.add(brandom);
        brandom.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Random r = new Random();
                int random;
                for (JTextField t : tf) {
                    random = r.nextInt(150);
                    t.setText(Integer.toString(random));

                }
            }
        });

        JButton restart = new JButton("Làm mới"); //buton cho giatri ngau nhien
        fontct(restart);
        x += (int) ((brandom.getWidth() + 10) + rateSize);
        restart.setBounds(x, y, w + 40, h);
        ct.add(restart);
        restart.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Random r = new Random();
                for (JTextField t : tf) {
                    t.setText("");

                }
            }
        });
        ct.revalidate();
        ct.repaint();
    }//GEN-LAST:event_taomangActionPerformed

    private void bubbleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubbleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bubbleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (sort.isAlive()) {
            JOptionPane.showMessageDialog(null, "Bạn không thể đọc file quá trình mô phỏng!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        inputFile();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void singleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleActionPerformed
         upSort.setEnabled(true);
        downSort.setEnabled(true);
        bubble.setEnabled(true);
        select.setEnabled(true);
        insert.setEnabled(true);
        quick.setEnabled(true);
        heap.setEnabled(true);
        merge.setEnabled(true);
    }//GEN-LAST:event_singleActionPerformed

    private void compareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareActionPerformed
        dieuKhien.clearSelection();

        upSort.setEnabled(false);
        downSort.setEnabled(false);

        thuatToan.clearSelection();

        bubble.setEnabled(false);
        select.setEnabled(false);
        insert.setEnabled(false);
        quick.setEnabled(false);
        heap.setEnabled(false);
        merge.setEnabled(false);
    }//GEN-LAST:event_compareActionPerformed

    private void downSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downSortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_downSortActionPerformed

    private void upSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upSortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_upSortActionPerformed
    public void fontct(JTextField l) {// font ct
        Font f = new Font("Arial", Font.CENTER_BASELINE, (int) (23 * rateSize));
        l.setFont(f);
        Color c = Color.black;
        l.setForeground(c);
    }

    public void fontct(JLabel l) {// font ct
        Font f = new Font("Arial", Font.CENTER_BASELINE, (int) (20 * rateSize));
        l.setFont(f);
        Color c = Color.white;
        l.setForeground(c);
    }

    public void fontct(JButton l) {//font ct
        Font f = new Font("Arial", Font.CENTER_BASELINE, (int) (14 * rateSize));
        l.setFont(f);
        Color c = new Color(0, 102, 102);
        l.setForeground(c);

    }

    public void fontmp(JLabel l) { //font mp
        Font f = new Font("Arial", Font.CENTER_BASELINE, (int) (25 * rateSize));
        l.setFont(f);
        l.setOpaque(true);
        Color c = Color.white;
        l.setBackground(c);
        l.setHorizontalAlignment(JLabel.CENTER);
        l.setVerticalAlignment(JLabel.CENTER);

    }

    public boolean WrongData() { //du lieu bi sai
        for (JTextField t : tf) {
            if (t.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ dữ liệu", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return true;
            }
            if (!t.getText().matches("\\d+")) {
                JOptionPane.showMessageDialog(null, "Dữ liệu phải là số nguyên", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return true;
            }
            if (sort.isAlive()) {
                JOptionPane.showMessageDialog(null, "Đang thực hiện sắp xếp", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return true;
            }
        }
        return false;
    }

    public void CreateLabelList() { //tao mang label tren pannel mo phong
        mp.removeAll();
        lb.clear();
        int space = (int) (mp.getWidth() / 2 - (n / 2) * (82 * rateSize)) - (int) (rateSize * 32);
        if (n % 2 == 0) {
            space += (int) (32 * rateSize); //khoang cach moi phan tu
        }
        int w = (int) (rateSize * 64);
        int h = (int) (rateSize * 64);
        int y = (int) (mp.getHeight() / 2 - w / 2);
        if (y % 2 != 0) {
            y--;
        }
        for (int i = 0; i < n; i++) {
            JTextField t = tf.get(i);
            JLabel l = new JLabel(t.getText());
            fontmp(l);
            l.setBounds(space, y, w, h);
            space += (int) (82 * rateSize);
            lb.add(l);
            mp.add(l);
        }
        mp.revalidate();
        mp.repaint();
    }

    public void initButton() { //thiet lap cac button ban dau
        control.clear();
        int w = (int) (240 * rateSize);
        int h = (int) (60 * rateSize);
        int x = (int) (40 * rateSize);
        int y = ct.getHeight() / 2 - h / 2;
        JButton start = new JButton("Bắt đầu chương trình"); //button bat dau
        start.setBackground(new Color(0, 150, 102));
        Font f = new Font("Arial", Font.BOLD, (int) (18 * rateSize));
        start.setFont(f);
        start.setBounds(x, y, w, h);
        start.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                startCT();
            }
        });
        control.add(start);

        x += start.getWidth() + 20;
        JButton init = new JButton("Dữ liệu ban đầu"); //button bat dau
        init.setFont(f);
        init.setBounds(x, y, w, h);
        init.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                result();
                CreateLabelList();
            }
        });
        control.add(init);
        w = (int) (240 * rateSize);
        h = (int) (60 * rateSize);
        x = (int) (40 * rateSize);
        y = ct.getHeight() / 2 - h / 2;
        JButton result = new JButton("Kết quả"); //button bat dau
        result.setBackground(Color.red);
        result.setFont(f);
        result.setBounds(x, y, w, h);
        result.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                result();
            }
        });
        control.add(result);

        JButton back = new JButton("Quay lại mảng"); //button bat dau
        back.setFont(f);
        back.setBounds(x, y, w, h);
        back.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                CreateLabelList();
                ct.removeAll();
                ct.add(control.get(0));
                ct.add(control.get(1));
                ct.repaint();
            }
        });
        control.add(back);
    }

    public void buttonCT() {
        ct.removeAll();
        ct.add(control.get(0));
        ct.add(control.get(1));
        ct.repaint();
    }

    public void result() {
        int initspeed = speed;
        sort.setSpeed(0);
        while (sort.isAlive()) {
        }
        speed = initspeed;
    }

    public void startCT() {
        if (lb.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Chưa có mảng", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        } else if (single.isSelected()) {
            single();
        } else {
            compare();
        }
    }

    public boolean isTxtFile(String fileName) { //kiem tra file co phai la txt k
        if (fileName.matches(".*\\.txt$")) {
            return true;
        }
        return false;
    }

    public void inputFile() {
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String fileName = selectedFile.getAbsolutePath();
            if (!isTxtFile(fileName)) {
                JOptionPane.showMessageDialog(null, "Định dạng file phải là .txt", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            ArrayList<Integer> numbers = new ArrayList<>();
            try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {

                String line;
                while ((line = br.readLine()) != null) {
                    try {
                        // Chuyển đổi từ chuỗi sang số nguyên và thêm vào mảng
                        int number = Integer.parseInt(line);
                        numbers.add(number);
                    } catch (NumberFormatException e) {
                        // Xử lý ngoại lệ nếu dòng không chứa số nguyên
                        JOptionPane.showMessageDialog(null, "File chứa dữ liệu không phải là số nguyên", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Không thể đọc File", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (numbers.size() < 2) {
                JOptionPane.showMessageDialog(null, "Mảng tối thiểu phải có 2 phần tử", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return;
            } else if (numbers.size() > 15) {
                JOptionPane.showMessageDialog(null, "Mảng chứa tối đa 15 phần tử", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            ct.removeAll();
            this.fileName = fileName;
            n = numbers.size();
            tf.clear();
            JLabel l = new JLabel("Dữ liệu File:");// tao jlabel, set dinh dang, them vao panel
            fontct(l);
            int x = (int) (14 * rateSize);
            l.setBounds((int) (x * rateSize), (int) (1 * rateSize), (int) (160 * rateSize), (int) (50 * rateSize));
            ct.add(l);

            int y = (int) ((l.getHeight() + 10) * rateSize);
            int w = (int) (56 * rateSize);
            int h = (int) (56 * rateSize);
            for (int i = 0; i < n; i++) { //tao texfield, set dinh dang, them vao panel
                JTextField jtf = new JTextField(numbers.get(i) + "");
                jtf.setEnabled(false);
                fontct(jtf);
                jtf.setBounds(x, y, w, h);
               x += (int) (64 * rateSize); //moi o cach nhau 64 cm
                tf.add(jtf);
                ct.add(jtf);
            }

            x += 5 + rateSize;

            JButton bstart = new JButton("Xác nhận tạo mảng"); //button bat dau
            bstart.setBackground(new Color(0, 150, 102));
            Font f = new Font("Arial", Font.BOLD,(int)(15*rateSize));
            bstart.setFont(f);
            bstart.setBounds(x, y, (int) (200 * rateSize), h);
            ct.add(bstart);
            bstart.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    if (WrongData()) {
                        return;
                    }
                    CreateLabelList();
                    buttonCT();
                }
            });
            ct.revalidate();
            ct.repaint();
            JOptionPane.showMessageDialog(null, "Đọc file thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void single() { //chay don thuat toan
        number.setVisible(true);
        Labelnos.setVisible(true);
        for (JLabel s : lb) {
            s.setVisible(true);
        }
        if (sort != null && sort.isAlive()) {
            sort.setSpeed(0);
            try {
                while (sort.isAlive()) {
                }
            } catch (Exception e) {
            }
            return;
        }
        for (JLabel s : lb) {
            s.setBackground(Color.white);
        }
        if (!upSort.isSelected() && !downSort.isSelected()) {
            JOptionPane.showMessageDialog(null, "Chưa chọn cấu trúc điều khiển", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (bubble.isSelected()) {
            sort = new BubbleSort(lb, speed, delay, number, control, upSort(), ct);
        } else if (select.isSelected()) {
            sort = new SelectionSort(lb, speed, delay, number, control, upSort(), ct);
        } else if (insert.isSelected()) {
            sort = new InsertionSort(lb, speed, delay, number, control, upSort(), ct);
        } else if (quick.isSelected()) {
            sort = new QuickSort(lb, speed, delay, number, mp, control, upSort(), ct);
        } else if (heap.isSelected()) {
            sort = new HeapSort(lb, speed, delay, number, mp, control, upSort(), ct);
        } else if (merge.isSelected()) {
            sort = new MergeSort(lb, speed, delay, number, mp, control, upSort(), ct);
        } else {
            JOptionPane.showMessageDialog(null, "Không có thuật toán nào được chọn", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        number.setText("0");

        ct.removeAll();
        ct.add(control.get(2));
        ct.repaint();
        sort.start();
    }

    public void getInforSwap(ArrayList<Point> TOS) { //lay so lan hoan doi cua moi thuat toan de vao Time Of Swap (tos)
        CreateLabelList();
        number.setText("0");
        sort = new BubbleSort(lb, 0, delay, number, control, upSort(), ct);
        sort.start();
        try {
            while (sort.isAlive()) {
            }
        } catch (Exception e) {
        }
        TOS.add(new Point(1, Integer.parseInt(number.getText())));
        CreateLabelList();

        number.setText("0");
        sort = new SelectionSort(lb, 0, delay, number, control, upSort(), ct);
        sort.start();
        try {
            while (sort.isAlive()) {
            }
        } catch (Exception e) {
        }
        TOS.add(new Point(2, Integer.parseInt(number.getText())));
        CreateLabelList();

        number.setText("0");
        sort = new InsertionSort(lb, 0, delay, number, control, upSort(), ct);
        sort.start();
        try {
            while (sort.isAlive()) {
            }
        } catch (Exception e) {
        }
        TOS.add(new Point(3, Integer.parseInt(number.getText())));
        CreateLabelList();

        number.setText("0");
        sort = new QuickSort(lb, 0, delay, number, mp, control, upSort(), ct);
        sort.start();
        try {
            while (sort.isAlive()) {
            }
        } catch (Exception e) {
        }
        TOS.add(new Point(4, Integer.parseInt(number.getText())));
        CreateLabelList();

        number.setText("0");
        sort = new HeapSort(lb, 0, delay, number, mp, control, upSort(), ct);
        sort.start();
        try {
            while (sort.isAlive()) {
            }
        } catch (Exception e) {
        }
        TOS.add(new Point(5, Integer.parseInt(number.getText())));
        CreateLabelList();

        number.setText("0");
        sort = new MergeSort(lb, 0, delay, number, mp, control, upSort(), ct);
        TOS.add(new Point(6, Integer.parseInt(number.getText())));
        sort.start();
        try {
            while (sort.isAlive()) {
            }
        } catch (Exception e) {
        }
        number.setText("0");
    }

    public void compare() {
        number.setVisible(false);
        Labelnos.setVisible(false);
        int initspeed = speed;
        String NOS[] = new String[]{"BubbleSort", "SelectionSort", "InsertionSort", "QuickSort", "HeapSort", "MergeSort"};
        ArrayList<Point> TosUp = new ArrayList<>();
        ArrayList<Point> TosDown = new ArrayList<>();

        upSort.setSelected(true);
        getInforSwap(TosUp);
        ArrayList<Integer> tempResult = new ArrayList<>();
        for (JLabel s : lb) {
            tempResult.add(Integer.parseInt(s.getText()));
        }
        downSort.setSelected(true);
        getInforSwap(TosDown);

        for (JLabel s : lb) {
            s.setVisible(false);
        }

        Collections.sort(TosUp, new Comparator<Point>() {
            @Override
            public int compare(Point p1, Point p2) {
                return Integer.compare(p1.getY(), p2.getY());
            }
        });

        Collections.sort(TosDown, new Comparator<Point>() {
            @Override
            public int compare(Point p1, Point p2) {
                return Integer.compare(p1.getY(), p2.getY());
            }
        });

        //
        JLabel mainTittle = new JLabel("NUMBER OF SWAPS");//tieu de
        mp.add(mainTittle);
        formatMain(mainTittle);
        mainTittle.setBounds(mp.getWidth() / 2 - 200, 0, 400, 40);
        Font f = new Font(Font.SERIF, Font.BOLD, 35);
        mainTittle.setFont(f);

        JLabel mainLine = new JLabel();// line o giua
        mainLine.setBounds(mp.getWidth() / 2, 60, 3, 550);
        mainLine.setBackground(Color.gray);
        mainLine.setOpaque(true);
        mp.add(mainLine);
        //
        int x = 170;
        int y = 125;
        int height = 60;

        JLabel ascen = new JLabel("Ascending sort");
        mp.add(ascen);
        formatMain(ascen);
        ascen.setBounds(x, y - 75, 250, height);
        //
        JLabel line1 = new JLabel();
        line1.setBounds(x, y - 20, 1, 490); //line o ascending sort
        line1.setBackground(Color.gray);
        line1.setOpaque(true);
        mp.add(line1);

        for (Point s : TosUp) {
            JLabel name = new JLabel(NOS[s.getX() - 1]);//ten thuat toan
            if (name.getText().equals("MergeSort")) {
                continue;
            }
            formatNameOfSort(name);
            name.setBounds(x - 150, y, 130, height);
            mp.add(name);

            int width = s.getY() * 3 + 1;
            JLabel column = new JLabel();
            column.setBackground(colorColumn);
            column.setOpaque(true);
            mp.add(column);
            column.setBounds(x + 10, y, width, height);

            JLabel notice = new JLabel(s.getY() + "");
            compareLabel(notice);
            notice.setBounds(x + width + 10, y, 30, height);
            mp.add(notice);
            y += 95;

        }

        x += mainLine.getX();
        y = 125;
        height = 60;
        JLabel descen = new JLabel("Descending sort");
        mp.add(descen);
        formatMain(descen);
        descen.setBounds(x, y - 75, 250, height);
        //
        JLabel line2 = new JLabel();
        line2.setBounds(x, y - 20, 1, 490); //line o descending sort
        line2.setBackground(Color.gray);
        line2.setOpaque(true);
        mp.add(line2);

        for (Point s : TosDown) {

            JLabel name = new JLabel(NOS[s.getX() - 1]);//ten thuat toan
            if (name.getText().equals("MergeSort")) {
                continue;
            }
            formatNameOfSort(name);
            name.setBounds(x - 150, y, 130, height);
            mp.add(name);

            int width = s.getY() * 3 + 1;
            JLabel column = new JLabel();
            column.setBackground(colorColumn);
            column.setOpaque(true);
            mp.add(column);
            column.setBounds(x + 10, y, width, height);

            JLabel notice = new JLabel(s.getY() + "");
            compareLabel(notice);
            notice.setBounds(x + width + 10, y, 30, height);
            mp.add(notice);
            y += 95;

        }

        JButton Output = new JButton("Đọc dữ liệu ra file >>"); //ct doc du lieu ra file
        int w = (int) (240 * rateSize);
        int h = (int) (60 * rateSize);
        x = ct.getWidth()-w-50;
        y = ct.getHeight() / 2 - h / 2;
        Font font = new Font("Arial", Font.BOLD,(int)(15*rateSize));
        Output.setFont(font);
        Output.setBounds(x,y,w,h);
        Output.setBackground(new Color(0, 150, 102));
        Output.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String outFileName = new String();
                if (!fileName.isEmpty()) {
                    int choice = JOptionPane.showConfirmDialog(
                            null,
                            "Bạn có muốn đọc dữ liệu ra file đã Input?",
                            "Thông báo",
                            JOptionPane.YES_NO_OPTION
                    );
                    if (choice == JOptionPane.YES_OPTION) {
                        outFileName = fileName;
                    }
                }
                if (outFileName.isEmpty()) {

                    JFileChooser fileChooser = new JFileChooser();
                    int returnValue = fileChooser.showOpenDialog(null);
                    if (returnValue == JFileChooser.APPROVE_OPTION) {
                        File selectedFile = fileChooser.getSelectedFile();
                        String fileName = selectedFile.getAbsolutePath();
                        if (!isTxtFile(fileName)) {
                            JOptionPane.showMessageDialog(null, "Định dạng file phải là .txt", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                            return;
                        }
                        outFileName = fileName;
                    }
                }
                if (outFileName.isEmpty()) {
                    return;
                }
                try (BufferedWriter bw = new BufferedWriter(new FileWriter(outFileName))) {

                    bw.write("Dữ liệu ban đầu:");
                    for (JTextField s : tf) {
                        bw.write(" " + s.getText());
                    }
                    bw.newLine();
                    bw.newLine();
                    bw.write("Sắp xếp tăng dần:");
                    for (int s : tempResult) {
                        bw.write(" " + s);
                    }
                    bw.newLine();
                    bw.newLine();
                    bw.write("Ascending sort: ");
                    bw.newLine();
                    bw.newLine();
                    for (Point s : TosUp) {
                        JLabel name = new JLabel(NOS[s.getX() - 1]);
                        if(name.getText().equals("MergeSort")) continue;
                        bw.write(name.getText() + ": Swap " + s.getY() + " lần");
                        bw.newLine();
                    }
                    bw.newLine();
                    bw.write("Sắp xếp giảm dần:");
                    for (JLabel s : lb) {
                        bw.write(" " + s.getText());
                        
                    }
                    bw.newLine();
                    bw.newLine();
                    bw.write("Ascending sort: ");
                    bw.newLine();
                    bw.newLine();
                    for (Point s : TosDown) {
                        JLabel name = new JLabel(NOS[s.getX() - 1]);
                        if(name.getText().equals("MergeSort")) continue;
                        bw.write(name.getText() + ": Swap " + s.getY() + " lần");
                        bw.newLine();
                    }
                    JOptionPane.showMessageDialog(null, "Ghi ra file thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException c) {
                    // Xử lý ngoại lệ nếu không thể ghi vào file
                    JOptionPane.showMessageDialog(null, "Không thể ghi vào file", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
        );
        ct.removeAll();

        ct.add(control.get(3));
        ct.add(Output);

        ct.repaint();
    }

    public void formatNameOfSort(JLabel tittle) {
        Font f = new Font(Font.SERIF, Font.BOLD, 20);
        tittle.setFont(f);
        tittle.setOpaque(false);
        Color c = colorNameOfSort;
        tittle.setForeground(c);
        tittle.setHorizontalAlignment(JLabel.RIGHT);
        tittle.setVerticalAlignment(JLabel.CENTER);
    }

    public void compareLabel(JLabel tittle) {
        Font f = new Font("Arial", Font.PLAIN, 17);
        tittle.setFont(f);
        tittle.setOpaque(false);
        Color c = colorNotice;
        tittle.setForeground(c);
        tittle.setHorizontalAlignment(JLabel.CENTER);
        tittle.setVerticalAlignment(JLabel.CENTER);
    }

    public void formatMain(JLabel tittle) {
        Font f = new Font(Font.SERIF, Font.BOLD, 30);
        tittle.setFont(f);
        tittle.setOpaque(false);
        Color c = colorTittle;
        tittle.setForeground(c);
        tittle.setHorizontalAlignment(JLabel.CENTER);
        tittle.setVerticalAlignment(JLabel.CENTER);

    }

    public boolean upSort() {
        return upSort.isSelected();//upSort co' duoc chon ko ?
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Simulation simulation = new Simulation();
                    simulation.setVisible(true);
                    simulation.setTitle("Mô phỏng giải thuật sắp xếp");
                } catch (Exception e) {
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Labelnos;
    private javax.swing.JPanel bhelp;
    private javax.swing.JRadioButton bubble;
    private javax.swing.JRadioButton compare;
    private javax.swing.JPanel contentTaomang;
    private javax.swing.JPanel ct;
    private javax.swing.JPanel descriptTaoMang;
    private javax.swing.ButtonGroup dieuKhien;
    private javax.swing.JRadioButton downSort;
    private javax.swing.JPanel header;
    private javax.swing.JRadioButton heap;
    private javax.swing.JButton help;
    private javax.swing.JRadioButton insert;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel labelSpeed;
    private javax.swing.ButtonGroup loaiMP;
    private javax.swing.JLabel lspt;
    private javax.swing.JLabel ltaomang;
    private javax.swing.JLabel ltaomang1;
    private javax.swing.JLabel ltaomang2;
    private javax.swing.JLabel ltaomang3;
    private javax.swing.JPanel mainProgram;
    private javax.swing.JLabel mainTittle;
    private javax.swing.JPanel menu;
    private javax.swing.JRadioButton merge;
    private javax.swing.JPanel mp;
    private javax.swing.JLabel number;
    private javax.swing.JPanel p1;
    private javax.swing.JPanel p2;
    private javax.swing.JPanel p3;
    private javax.swing.JPanel pgreenMP;
    private javax.swing.JPanel preaddata;
    private javax.swing.JPanel pspeed;
    private javax.swing.JPanel pspt;
    private javax.swing.JPanel ptaomang;
    private javax.swing.JPanel ptittle;
    private javax.swing.JPanel ptittlecreate;
    private javax.swing.JRadioButton quick;
    private javax.swing.JRadioButton select;
    private javax.swing.JPanel simulation;
    private javax.swing.JRadioButton single;
    private javax.swing.JSlider sliderSpeed;
    private javax.swing.JSpinner spt;
    private javax.swing.JButton taomang;
    private javax.swing.ButtonGroup thuatToan;
    private javax.swing.JPanel timeOfSwapHeader;
    private javax.swing.JRadioButton upSort;
    private javax.swing.JRadioButton upSort2;
    // End of variables declaration//GEN-END:variables
}
